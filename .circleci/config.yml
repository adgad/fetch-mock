version: 2.0

references:
  triggerable-by-tag: &triggerable-by-tag
    filters:
      tags:
        only: /.*/

  node18: &node18
    docker:
      - image: cimg/node:18.11
  nodelts: &nodelts
    docker:
      - image: cimg/node:lts
  browsers: &browsers
    docker:
      - image: cimg/node:lts-browsers
  nodecurrent: &nodecurrent
    docker:
      - image: cimg/node:current

  workspace: &workspace
    attach_workspace:
      at: ~/project
  persist: &persist
    persist_to_workspace:
      root: .
      paths:
        - .
  after-build-test-lint: &after-build-test-lint
    requires:
      - test
      - lint
      - build
  after-build-lint: &after-build-lint
    requires:
      - lint
      - build

jobs:
  checkout_code:
    <<: *nodelts
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: if [ ! -d "node_modules" ]; then npm install --no-package-lock; fi
      - save_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - *persist

  build:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run build
      - *persist
  lint:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run lint:ci
      - run: npm run prettier:ci

  typecheck:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run types:check --noEmit=true
  test:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run test:ci
      - store_test_results:
          path: test-results
  test-node18:
    <<: *node18
    steps:
      - *workspace
      - run: npm run test:ci
  test-browser:
    <<: *browsers
    steps:
      - *workspace
      - run: npx playwright install
      - run: npm run test:browser
  test-jest:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run test:jest
      - store_test_results:
          path: test-results
  module-compat:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run compat:module

  publish:
    <<: *nodelts
    steps:
      - *workspace
      - run: npm run build
      - run:
          name: NPM auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ${HOME}/.npmrc
      - run:
          name: NPM publish
          command: ./scripts/circleci-npm-publish.sh

workflows:
  version: 2
  fetch-mock-ci-cd:
    jobs:
      - checkout_code: *triggerable-by-tag
      - lint:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - build:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - test:
          <<: *triggerable-by-tag
          requires:
            - build
      - typecheck:
          <<: *triggerable-by-tag
          <<: *after-build-lint
      - test-browser:
          <<: *triggerable-by-tag
          <<: *after-build-test-lint
      - test-node18:
          <<: *triggerable-by-tag
          <<: *after-build-test-lint
      - test-jest:
          <<: *triggerable-by-tag
          <<: *after-build-test-lint
      - module-compat:
          <<: *triggerable-by-tag
          <<: *after-build-lint
      - publish:
          requires:
            - test-node18
            - test-browser
            - test-jest
            - build
            - test
            - lint
            - module-compat
            - typecheck
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[\w-]+-v?\d+\.\d+\.\d+(?:-(beta|alpha)\.\d+)?$/
